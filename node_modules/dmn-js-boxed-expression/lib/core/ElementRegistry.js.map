{"version":3,"file":"ElementRegistry.js","names":["ElementRegistry","constructor","viewer","eventBus","_eventBus","_viewer","updateId","element","newId","rootElement","getRootElement","Error","fire","id","$inject"],"sources":["../../src/core/ElementRegistry.js"],"sourcesContent":["/**\n * A single decision element registry.\n *\n * The sole purpose of this service is to provide the necessary API\n * to serve shared components, i.e. the UpdatePropertiesHandler.\n */\nexport default class ElementRegistry {\n\n  constructor(viewer, eventBus) {\n    this._eventBus = eventBus;\n    this._viewer = viewer;\n  }\n\n  updateId(element, newId) {\n\n    const rootElement = this._viewer.getRootElement();\n\n    if (element !== rootElement) {\n      throw new Error('element !== rootElement');\n    }\n\n    this._eventBus.fire('element.updateId', {\n      element: element,\n      newId: newId\n    });\n\n    element.id = newId;\n  }\n\n}\n\nElementRegistry.$inject = [\n  'viewer',\n  'eventBus'\n];"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,eAAe,CAAC;EAEnCC,WAAWA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAC5B,IAAI,CAACC,SAAS,GAAGD,QAAQ;IACzB,IAAI,CAACE,OAAO,GAAGH,MAAM;EACvB;EAEAI,QAAQA,CAACC,OAAO,EAAEC,KAAK,EAAE;IAEvB,MAAMC,WAAW,GAAG,IAAI,CAACJ,OAAO,CAACK,cAAc,CAAC,CAAC;IAEjD,IAAIH,OAAO,KAAKE,WAAW,EAAE;MAC3B,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,IAAI,CAACP,SAAS,CAACQ,IAAI,CAAC,kBAAkB,EAAE;MACtCL,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA;IACT,CAAC,CAAC;IAEFD,OAAO,CAACM,EAAE,GAAGL,KAAK;EACpB;AAEF;AAEAR,eAAe,CAACc,OAAO,GAAG,CACxB,QAAQ,EACR,UAAU,CACX","ignoreList":[]}
{"version":3,"file":"LiteralExpressionEditorComponent.js","names":["Component","is","isFeel","EditableComponent","LiteralExpression","withChangeSupport","_LiteralExpressionEditorComponent","constructor","props","context","_literalExpression","injector","get","_translate","_expressionLanguages","_variableResolver","getLiteralExpression","expression","editLiteralExpressionText","text","literalExpression","setText","getEditor","FeelEditor","TextEditor","businessObject","_getVariables","getVariables","render","Editor","variables","label","createComponentVNode","normalizeProps","onChange","createVNode","getClassName","LiteralExpressionEditorComponent","LiteralExpressionEditorComponentProvider","$inject","components","onGetComponent"],"sources":["../../../../src/features/literal-expression/components/LiteralExpressionEditorComponent.js"],"sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport { is, isFeel } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nimport EditableComponent from 'dmn-js-shared/lib/components/EditableComponent';\r\nimport LiteralExpression from 'dmn-js-shared/lib/components/LiteralExpression';\r\n\r\nimport { withChangeSupport } from '../../../util/withChangeSupport';\r\n\r\nclass _LiteralExpressionEditorComponent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._literalExpression = context.injector.get('literalExpression');\r\n    this._translate = context.injector.get('translate');\r\n    this._expressionLanguages = context.injector.get('expressionLanguages');\r\n    this._variableResolver = context.injector.get('variableResolver', false);\r\n  }\r\n\r\n  getLiteralExpression() {\r\n    return this.props.expression;\r\n  }\r\n\r\n  editLiteralExpressionText = text => {\r\n    const literalExpression = this.getLiteralExpression();\r\n\r\n    this._literalExpression.setText(literalExpression, text);\r\n  };\r\n\r\n  getEditor() {\r\n    return this.isFeel() ? FeelEditor : TextEditor;\r\n  }\r\n\r\n  isFeel() {\r\n    const businessObject = this.getLiteralExpression();\r\n\r\n    return isFeel(businessObject);\r\n  }\r\n\r\n  _getVariables() {\r\n    const businessObject = this.getLiteralExpression();\r\n\r\n    return this._variableResolver &&\r\n      this._variableResolver.getVariables(businessObject);\r\n  }\r\n\r\n  render() {\r\n\r\n    // there is only one single element\r\n    const { text } = this.getLiteralExpression();\r\n    const Editor = this.getEditor();\r\n    const variables = this._getVariables();\r\n    const label = this._translate('Literal expression');\r\n\r\n    return (\r\n      <Editor\r\n        label={ label }\r\n        className=\"textarea editor\"\r\n        value={ text }\r\n        onChange={ this.editLiteralExpressionText }\r\n        variables={ variables } />\r\n    );\r\n  }\r\n}\r\n\r\nfunction FeelEditor(props) {\r\n  return <LiteralExpression { ...props } onChange={ props.onChange } />;\r\n}\r\n\r\nclass TextEditor extends EditableComponent {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={ this.getClassName() }>\r\n        { this.getEditor() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst LiteralExpressionEditorComponent = withChangeSupport(\r\n  _LiteralExpressionEditorComponent, props => [ props.expression ]\r\n);\r\n\r\nexport class LiteralExpressionEditorComponentProvider {\r\n  static $inject = [ 'components' ];\r\n\r\n  constructor(components) {\r\n    components.onGetComponent('expression', ({ expression }) => {\r\n      if (is(expression, 'dmn:LiteralExpression')) {\r\n        return LiteralExpressionEditorComponent;\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}
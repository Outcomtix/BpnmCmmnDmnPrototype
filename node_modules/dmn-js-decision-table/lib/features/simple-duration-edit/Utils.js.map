{"version":3,"file":"Utils.js","names":["keys","operators","equals","less","lessEquals","greater","greaterEquals","getOperatorName","string","filter","key","parseDuration","text","isEmptyString","trim","type","values","parsedComparison","parseComparison","parsedRange","parseRange","getComparisonString","comparisonOperator","comparisonValue","getRangeString","rangeStartValue","rangeEndValue","rangeStartType","rangeEndType","rangeStartChar","rangeEndChar","validateDuration","value","validateYearMonthDuration","validateDayTimeDuration","test","withoutDurationCall","result","exec","exactValue","operator","match","start","end","firstValue","secondValue","regex","input","groups"],"sources":["../../../src/features/simple-duration-edit/Utils.js"],"sourcesContent":["import { keys } from 'min-dash';\n\nexport const operators = {\n  equals: '=',\n  less: '<',\n  lessEquals: '<=',\n  greater: '>',\n  greaterEquals: '>='\n};\n\nfunction getOperatorName(string) {\n  return keys(operators).filter(key => {\n    return string === operators[ key ];\n  })[0];\n}\n\nexport function parseDuration(text) {\n  if (!text || isEmptyString(text.trim())) {\n    return {\n      type: 'comparison',\n      values: []\n    };\n  }\n\n  const parsedComparison = parseComparison(text);\n\n  if (parsedComparison) {\n    return parsedComparison;\n  }\n\n  const parsedRange = parseRange(text);\n\n  if (parsedRange) {\n    return parsedRange;\n  }\n}\n\nexport function isEmptyString(string) {\n  return string === '';\n}\n\nexport function getComparisonString(comparisonOperator, comparisonValue) {\n  if (comparisonOperator === 'equals') {\n    return `duration(\"${ comparisonValue }\")`;\n  } else {\n    return `${ operators[comparisonOperator] } duration(\"${ comparisonValue }\")`;\n  }\n}\n\nexport function getRangeString(\n    rangeStartValue,\n    rangeEndValue,\n    rangeStartType,\n    rangeEndType) {\n  const rangeStartChar = rangeStartType === 'exclude' ? ']' : '[',\n        rangeEndChar = rangeEndType === 'exclude' ? '[' : ']';\n\n  return `${ rangeStartChar }duration(\"${ rangeStartValue }\")` +\n    `..duration(\"${ rangeEndValue }\")${ rangeEndChar }`;\n}\n\nexport function validateDuration(type, value) {\n  if (type === 'yearMonthDuration') {\n    return validateYearMonthDuration(value);\n  } else if (type === 'dayTimeDuration') {\n    return validateDayTimeDuration(value);\n  }\n}\n\nfunction validateYearMonthDuration(value) {\n  return /^P(\\d+Y\\d+M|\\d+Y|\\d+M)$/.test(value);\n}\n\nfunction validateDayTimeDuration(value) {\n  return /^P(\\d+DT\\d+H|\\d+D|T\\d+H)$/.test(value);\n}\n\nexport function withoutDurationCall(text) {\n  const result = /^duration\\(\"([^\"]*)\"\\)$/.exec(text);\n  return result && result[1];\n}\n\nfunction parseComparison(text) {\n  const exactValue = withoutDurationCall(text);\n\n  if (exactValue) {\n    return {\n      type: 'comparison',\n      operator: 'equals',\n      values: [ exactValue ]\n    };\n  }\n\n  const {\n    operator,\n    value\n  } = match(/^(?<operator>=|(:?<|>)=?)\\s*duration\\(\"(?<value>[^\"]*)\"\\)$/, text);\n\n  if (operator && value) {\n    return {\n      type: 'comparison',\n      values: [ value ],\n      operator: getOperatorName(operator)\n    };\n  }\n}\n\nfunction parseRange(text) {\n  const {\n    start,\n    end,\n    firstValue,\n    secondValue\n  } = match(/^(?<start>[[\\]])duration\\(\"(?<firstValue>[^\"]*)\"\\)\\.\\.duration\\(\"(?<secondValue>[^\"]*)\"\\)(?<end>[[\\]])$/, text);\n\n  if (start && end) {\n    return {\n      type: 'range',\n      values: [ firstValue, secondValue ],\n      start: start === ']' ? 'exclude' : 'include',\n      end: end === '[' ? 'exclude' : 'include'\n    };\n  }\n}\n\nfunction match(regex, input) {\n  const {\n    groups\n  } = regex.exec(input) || { groups: {} };\n\n  return groups;\n}\n"],"mappings":"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","ignoreList":[]}
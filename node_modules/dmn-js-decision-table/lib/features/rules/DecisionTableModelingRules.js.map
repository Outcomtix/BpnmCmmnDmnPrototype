{"version":3,"file":"DecisionTableModelingRules.js","names":["every","Row","Col","isInput","isOutput","RuleProvider","HIGH_PRIORITY","DecisionTableModelingRules","constructor","eventBus","sheet","_sheet","init","addRule","col","index","businessObject","getRoot","input","length","cols","filter","c","data","target","root","canPasteRows","canPasteCols","descriptor","type","cells","cellDescriptor","$type","targetCol","rows","$inject"],"sources":["../../../src/features/rules/DecisionTableModelingRules.js"],"sourcesContent":["import {\r\n  every\r\n} from 'min-dash';\r\n\r\nimport { Row, Col } from 'table-js/lib/model';\r\n\r\nimport { isInput, isOutput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\r\n\r\nconst HIGH_PRIORITY = 2000;\r\n\r\nexport default class DecisionTableModelingRules extends RuleProvider {\r\n\r\n  constructor(eventBus, sheet) {\r\n    super(eventBus);\r\n\r\n    this._sheet = sheet;\r\n  }\r\n\r\n  init() {\r\n    this.addRule('col.move', HIGH_PRIORITY, ({ col, index }) => {\r\n      const { businessObject } = this._sheet.getRoot(),\r\n            { input } = businessObject;\r\n\r\n      if (isInput(col)) {\r\n        return index < input.length;\r\n      } else {\r\n        return index >= input.length;\r\n      }\r\n    });\r\n\r\n    this.addRule('col.remove', HIGH_PRIORITY, ({ col }) => {\r\n      const { cols } = this._sheet.getRoot();\r\n\r\n      if (isOutput(col)) {\r\n        return cols.filter(c => isOutput(c)).length > 1;\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    // a rule that is aware of the data structure coming from copy and paste\r\n    this.addRule('paste', HIGH_PRIORITY, ({ data, target }) => {\r\n      if (!data || !target) {\r\n        return false;\r\n      }\r\n\r\n      const { root } = data;\r\n\r\n      if (target instanceof Row) {\r\n        return this.canPasteRows(root);\r\n      }\r\n\r\n      if (target instanceof Col) {\r\n        return this.canPasteCols(root, target);\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n\r\n  canPasteRows(root) {\r\n    const { cols } = this._sheet.getRoot();\r\n\r\n    return every(root, descriptor => {\r\n      if (descriptor.type !== 'row') {\r\n        return false;\r\n      }\r\n\r\n      if (descriptor.cells.length !== cols.length) {\r\n        return false;\r\n      }\r\n\r\n      return every(descriptor.cells, (cellDescriptor, index) => {\r\n        if (isInput(cols[index])) {\r\n          return cellDescriptor.businessObject.$type === 'dmn:UnaryTests';\r\n        } else {\r\n          return cellDescriptor.businessObject.$type === 'dmn:LiteralExpression';\r\n        }\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  canPasteCols(root, targetCol) {\r\n    const { rows } = this._sheet.getRoot();\r\n\r\n    return every(root, descriptor => {\r\n      if (descriptor.type !== 'col') {\r\n        return false;\r\n      }\r\n\r\n      if (descriptor.cells.length !== rows.length) {\r\n        return false;\r\n      }\r\n\r\n      if (isInput(targetCol)) {\r\n        return descriptor.businessObject.$type === 'dmn:InputClause';\r\n      } else {\r\n        return descriptor.businessObject.$type === 'dmn:OutputClause';\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nDecisionTableModelingRules.$inject = [ 'eventBus', 'sheet' ];"],"mappings":"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","ignoreList":[]}
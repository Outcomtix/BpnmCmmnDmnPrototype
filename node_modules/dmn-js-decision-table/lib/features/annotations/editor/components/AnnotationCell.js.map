{"version":3,"file":"AnnotationCell.js","names":["Component","EditableComponent","Cell","inject","EditableAnnotationCell","constructor","props","context","componentWillMount","row","changeSupport","onElementsChanged","id","componentWillUnmount","offElementsChanged","forceUpdate","setAnnotationValue","text","modeling","editAnnotation","businessObject","render","rowIndex","description","createComponentVNode","children","AnnotationEditor","translate","$inject","createVNode","getClassName","getEditor"],"sources":["../../../../../src/features/annotations/editor/components/AnnotationCell.js"],"sourcesContent":["import { Component } from 'inferno';\n\nimport EditableComponent from 'dmn-js-shared/lib/components/EditableComponent';\n\nimport {\n  Cell,\n  inject\n} from 'table-js/lib/components';\n\n\nexport default class EditableAnnotationCell extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    inject(this);\n  }\n\n  componentWillMount() {\n    const { row } = this.props;\n\n    this.changeSupport.onElementsChanged(row.id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const { row } = this.props;\n\n    this.changeSupport.offElementsChanged(row.id, this.onElementsChanged);\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  };\n\n  setAnnotationValue = (text) => {\n    const { row } = this.props;\n\n    this.modeling.editAnnotation(row.businessObject, text);\n  };\n\n\n  render() {\n    const {\n      row,\n      rowIndex\n    } = this.props;\n    const {\n      description,\n      id\n    } = row.businessObject;\n\n    return (\n\n      <Cell\n        className=\"annotation\"\n        onChange={ this.setAnnotationValue }\n        coords={ `${rowIndex}:annotation` }\n        value={ description }\n        elementId={ id }\n        data-row-id={ row.id }>\n\n        <AnnotationEditor\n          label={ this.translate('Annotation') }\n          ctrlForNewline={ true }\n          className=\"annotation-editor\"\n          onChange={ this.setAnnotationValue }\n          value={ description } />\n      </Cell>\n    );\n  }\n\n}\n\nEditableAnnotationCell.$inject = [\n  'changeSupport',\n  'modeling',\n  'translate'\n];\n\n\nclass AnnotationEditor extends EditableComponent {\n\n  render() {\n    return (\n      <div className={ this.getClassName() }>\n        { this.getEditor() }\n      </div>\n    );\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,SAAS;AAEnC,OAAOC,iBAAiB,MAAM,gDAAgD;AAE9E,SACEC,IAAI,EACJC,MAAM,QACD,yBAAyB;AAGhC,eAAe,MAAMC,sBAAsB,SAASJ,SAAS,CAAC;EAE5DK,WAAWA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAC1B,KAAK,CAACD,KAAK,EAAEC,OAAO,CAAC;IAErBJ,MAAM,CAAC,IAAI,CAAC;EACd;EAEAK,kBAAkBA,CAAA,EAAG;IACnB,MAAM;MAAEC;IAAI,CAAC,GAAG,IAAI,CAACH,KAAK;IAE1B,IAAI,CAACI,aAAa,CAACC,iBAAiB,CAACF,GAAG,CAACG,EAAE,EAAE,IAAI,CAACD,iBAAiB,CAAC;EACtE;EAEAE,oBAAoBA,CAAA,EAAG;IACrB,MAAM;MAAEJ;IAAI,CAAC,GAAG,IAAI,CAACH,KAAK;IAE1B,IAAI,CAACI,aAAa,CAACI,kBAAkB,CAACL,GAAG,CAACG,EAAE,EAAE,IAAI,CAACD,iBAAiB,CAAC;EACvE;EAEAA,iBAAiB,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACI,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDC,kBAAkB,GAAIC,IAAI,IAAK;IAC7B,MAAM;MAAER;IAAI,CAAC,GAAG,IAAI,CAACH,KAAK;IAE1B,IAAI,CAACY,QAAQ,CAACC,cAAc,CAACV,GAAG,CAACW,cAAc,EAAEH,IAAI,CAAC;EACxD,CAAC;EAGDI,MAAMA,CAAA,EAAG;IACP,MAAM;MACJZ,GAAG;MACHa;IACF,CAAC,GAAG,IAAI,CAAChB,KAAK;IACd,MAAM;MACJiB,WAAW;MACXX;IACF,CAAC,GAAGH,GAAG,CAACW,cAAc;IAEtB,OAAAI,oBAAA,IAAAtB,IAAA;MAAA,aAGc,YAAY;MAAA,YACX,IAAI,CAACc,kBAAkB;MAAA,UACzB,GAAGM,QAAQ,aAAa;MAAA,SACzBC,WAAW;MAAA,aACPX,EAAE;MAAA,eACAH,GAAG,CAACG,EAAE;MAAAa,QAAA,EAAAD,oBAAA,IAAAE,gBAAA;QAAA,SAGV,IAAI,CAACC,SAAS,CAAC,YAAY,CAAC;QAAA,kBACnB,IAAI;QAAA,aACX,mBAAmB;QAAA,YAClB,IAAI,CAACX,kBAAkB;QAAA,SAC1BO;MAAW;IAAA;EAG3B;AAEF;AAEAnB,sBAAsB,CAACwB,OAAO,GAAG,CAC/B,eAAe,EACf,UAAU,EACV,WAAW,CACZ;AAGD,MAAMF,gBAAgB,SAASzB,iBAAiB,CAAC;EAE/CoB,MAAMA,CAAA,EAAG;IACP,OAAAQ,WAAA,WACmB,IAAI,CAACC,YAAY,CAAC,CAAC,EAChC,IAAI,CAACC,SAAS,CAAC,CAAC;EAGxB;AACF","ignoreList":[]}
{"version":3,"file":"SimpleModeButtonComponent.js","names":["Component","assign","closest","domClosest","inject","getNodeById","isInput","isOutput","OFFSET","SimpleModeButtonComponent","constructor","props","context","_translate","injector","get","state","top","left","isVisible","isDisabled","selection","debounceInput","onClick","bind","handleSelectionChanged","hideAndShowDebounced","showDebounced","updatePosition","componentDidMount","eventBus","on","componentWillUnmount","off","hide","show","setState","elementId","elementRegistry","expressionLanguages","simpleMode","canSimpleEdit","expressionLanguage","getExpressionLanguage","isDefaultExpressionLanguage","node","renderer","container","getContainer","containerBounds","getBoundingClientRect","cellNode","id","cellBounds","nodeBounds","scrollLeft","scrollTop","getTableContainerScroll","nodePosition","width","height","style","element","fire","_container","render","classes","push","createVNode","join","null","$inject","cell","businessObject","getDefaultExpressionLanguage","col","getDefault","value","tableContainer"],"sources":["../../../../src/features/simple-mode/components/SimpleModeButtonComponent.js"],"sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport { assign } from 'min-dash';\r\n\r\nimport { closest as domClosest } from 'min-dom';\r\n\r\nimport { inject } from 'table-js/lib/components';\r\n\r\nimport {\r\n  getNodeById\r\n} from '../../cell-selection/CellSelectionUtil';\r\n\r\nimport { isInput, isOutput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nconst OFFSET = 4;\r\n\r\nexport default class SimpleModeButtonComponent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._translate = context.injector.get('translate');\r\n    this.state = {\r\n      top: 0,\r\n      left: 0,\r\n      isVisible: false,\r\n      isDisabled: false,\r\n      selection: null\r\n    };\r\n\r\n    inject(this);\r\n\r\n    const { debounceInput } = this;\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n    this.handleSelectionChanged = this.handleSelectionChanged.bind(this);\r\n    this.hideAndShowDebounced = this.hideAndShowDebounced.bind(this);\r\n    this.showDebounced = debounceInput(this.showDebounced.bind(this));\r\n    this.updatePosition = this.updatePosition.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { eventBus } = this;\r\n\r\n    eventBus.on('cellSelection.changed', this.handleSelectionChanged);\r\n\r\n    eventBus.on('commandStack.changed', this.updatePosition);\r\n\r\n    eventBus.on('sheet.scroll', this.hideAndShowDebounced);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { eventBus } = this;\r\n\r\n    eventBus.off('cellSelection.changed', this.handleSelectionChanged);\r\n\r\n    eventBus.off('commandStack.changed', this.updatePosition);\r\n\r\n    eventBus.off('sheet.scroll', this.hideAndShowDebounced);\r\n  }\r\n\r\n  hideAndShowDebounced() {\r\n    if (this.state.isVisible) {\r\n      this.hide();\r\n      this.showDebounced();\r\n    }\r\n  }\r\n\r\n  showDebounced() {\r\n    this.show();\r\n  }\r\n\r\n  hide(state = {}) {\r\n    this.setState({\r\n      ...state,\r\n      isVisible: false\r\n    });\r\n  }\r\n\r\n  show(state = {}) {\r\n    this.setState({\r\n      ...state,\r\n      isVisible: true\r\n    });\r\n\r\n    this.updatePosition();\r\n  }\r\n\r\n  handleSelectionChanged({ elementId }) {\r\n    const {\r\n      elementRegistry,\r\n      expressionLanguages,\r\n      simpleMode\r\n    } = this;\r\n\r\n    const selection = elementRegistry.get(elementId);\r\n\r\n    if (!selection || !simpleMode.canSimpleEdit(selection)) {\r\n      this.hide({\r\n        isDisabled: false,\r\n        selection: null\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const expressionLanguage = getExpressionLanguage(selection);\r\n\r\n    const isDisabled = !isDefaultExpressionLanguage(\r\n      selection,\r\n      expressionLanguage,\r\n      expressionLanguages\r\n    );\r\n\r\n    this.show({\r\n      isDisabled,\r\n      selection\r\n    });\r\n  }\r\n\r\n  // position button always on opposite site of context menu\r\n  updatePosition() {\r\n    const { selection } = this.state;\r\n\r\n    const { node } = this;\r\n\r\n    if (!selection || !node) {\r\n      return;\r\n    }\r\n\r\n    const { renderer } = this;\r\n\r\n    const container = renderer.getContainer(),\r\n          containerBounds = container.getBoundingClientRect();\r\n\r\n    const cellNode = getNodeById(selection.id, container);\r\n\r\n    const cellBounds = cellNode.getBoundingClientRect();\r\n\r\n    const nodeBounds = this.node.getBoundingClientRect();\r\n\r\n    const { scrollLeft, scrollTop } = getTableContainerScroll(node);\r\n\r\n    const nodePosition = {};\r\n\r\n    if (cellBounds.left + (cellBounds.width / 2) > containerBounds.width / 2) {\r\n\r\n      // left\r\n      nodePosition.left =\r\n        (-containerBounds.left\r\n          + cellBounds.left\r\n          - nodeBounds.width\r\n          + OFFSET\r\n          + scrollLeft)\r\n        + 'px';\r\n    } else {\r\n\r\n      // right\r\n      nodePosition.left =\r\n        (-containerBounds.left\r\n          + cellBounds.left\r\n          + cellBounds.width\r\n          - OFFSET\r\n          + scrollLeft)\r\n        + 'px';\r\n    }\r\n\r\n    if (cellBounds.top + (cellBounds.height / 2) > containerBounds.height / 2) {\r\n\r\n      // bottom\r\n      nodePosition.top =\r\n        (-containerBounds.top\r\n          + cellBounds.top\r\n          - nodeBounds.height\r\n          + OFFSET\r\n          + scrollTop)\r\n        + 'px';\r\n    } else {\r\n\r\n      // top\r\n      nodePosition.top =\r\n        (-containerBounds.top\r\n          + cellBounds.top\r\n          - OFFSET\r\n          + scrollTop)\r\n        + 'px';\r\n    }\r\n\r\n    assign(this.node.style, nodePosition);\r\n  }\r\n\r\n  onClick() {\r\n    const { eventBus } = this;\r\n\r\n    const { isDisabled } = this.state;\r\n\r\n    if (isDisabled) {\r\n      return;\r\n    }\r\n\r\n    const { selection } = this;\r\n\r\n    const element = selection.get();\r\n\r\n    if (!element) {\r\n      return;\r\n    }\r\n\r\n    eventBus.fire('simpleMode.open', {\r\n      element,\r\n      node: getNodeById(element.id, this._container)\r\n    });\r\n\r\n    this.hide();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isDisabled,\r\n      isVisible,\r\n      top,\r\n      left\r\n    } = this.state;\r\n\r\n    const classes = [\r\n      'simple-mode-button',\r\n      'no-deselect'\r\n    ];\r\n\r\n    if (isDisabled) {\r\n      classes.push('disabled');\r\n    }\r\n\r\n    return (\r\n      isVisible\r\n        ? (\r\n          <div\r\n            className={ classes.join(' ') }\r\n            onClick={ this.onClick }\r\n            ref={ node => this.node = node }\r\n            style={ { top, left } }\r\n            title={ isDisabled\r\n              ? this._translate('Editing not supported for set expression language')\r\n              : this._translate('Edit') }><span className=\"dmn-icon-edit\"></span></div>\r\n        ) : null\r\n    );\r\n  }\r\n}\r\n\r\nSimpleModeButtonComponent.$inject = [\r\n  'debounceInput',\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'expressionLanguages',\r\n  'renderer',\r\n  'selection',\r\n  'simpleMode'\r\n];\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Return set expression language if found.\r\n *\r\n * @param {Cell} cell - Cell.\r\n */\r\nfunction getExpressionLanguage(cell) {\r\n  return cell.businessObject.expressionLanguage;\r\n}\r\n\r\nfunction isDefaultExpressionLanguage(cell, expressionLanguage, expressionLanguages) {\r\n  return !expressionLanguage ||\r\n    expressionLanguage === getDefaultExpressionLanguage(cell, expressionLanguages);\r\n}\r\n\r\nfunction getDefaultExpressionLanguage(cell, expressionLanguages) {\r\n  if (isInput(cell.col)) {\r\n    return expressionLanguages.getDefault('inputCell').value;\r\n  } else if (isOutput(cell.col)) {\r\n    return expressionLanguages.getDefault('outputCell').value;\r\n  }\r\n}\r\n\r\nfunction getTableContainerScroll(node) {\r\n  const tableContainer = domClosest(node, '.tjs-table-container');\r\n\r\n  if (!tableContainer) {\r\n    return {\r\n      scrollTop: 0,\r\n      scrollLeft: 0\r\n    };\r\n  }\r\n\r\n  const { scrollLeft, scrollTop } = tableContainer;\r\n\r\n  return {\r\n    scrollTop,\r\n    scrollLeft\r\n  };\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,SAAS;AAEnC,SAASC,MAAM,QAAQ,UAAU;AAEjC,SAASC,OAAO,IAAIC,UAAU,QAAQ,SAAS;AAE/C,SAASC,MAAM,QAAQ,yBAAyB;AAEhD,SACEC,WAAW,QACN,wCAAwC;AAE/C,SAASC,OAAO,EAAEC,QAAQ,QAAQ,kCAAkC;AAEpE,MAAMC,MAAM,GAAG,CAAC;AAEhB,eAAe,MAAMC,yBAAyB,SAAST,SAAS,CAAC;EAC/DU,WAAWA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAC1B,KAAK,CAACD,KAAK,EAAEC,OAAO,CAAC;IAErB,IAAI,CAACC,UAAU,GAAGD,OAAO,CAACE,QAAQ,CAACC,GAAG,CAAC,WAAW,CAAC;IACnD,IAAI,CAACC,KAAK,GAAG;MACXC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE;IACb,CAAC;IAEDjB,MAAM,CAAC,IAAI,CAAC;IAEZ,MAAM;MAAEkB;IAAc,CAAC,GAAG,IAAI;IAE9B,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IAEtC,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACD,IAAI,CAAC,IAAI,CAAC;IACpE,IAAI,CAACE,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACF,IAAI,CAAC,IAAI,CAAC;IAChE,IAAI,CAACG,aAAa,GAAGL,aAAa,CAAC,IAAI,CAACK,aAAa,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,IAAI,CAACI,cAAc,GAAG,IAAI,CAACA,cAAc,CAACJ,IAAI,CAAC,IAAI,CAAC;EACtD;EAEAK,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI;IAEzBA,QAAQ,CAACC,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAACN,sBAAsB,CAAC;IAEjEK,QAAQ,CAACC,EAAE,CAAC,sBAAsB,EAAE,IAAI,CAACH,cAAc,CAAC;IAExDE,QAAQ,CAACC,EAAE,CAAC,cAAc,EAAE,IAAI,CAACL,oBAAoB,CAAC;EACxD;EAEAM,oBAAoBA,CAAA,EAAG;IACrB,MAAM;MAAEF;IAAS,CAAC,GAAG,IAAI;IAEzBA,QAAQ,CAACG,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACR,sBAAsB,CAAC;IAElEK,QAAQ,CAACG,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACL,cAAc,CAAC;IAEzDE,QAAQ,CAACG,GAAG,CAAC,cAAc,EAAE,IAAI,CAACP,oBAAoB,CAAC;EACzD;EAEAA,oBAAoBA,CAAA,EAAG;IACrB,IAAI,IAAI,CAACV,KAAK,CAACG,SAAS,EAAE;MACxB,IAAI,CAACe,IAAI,CAAC,CAAC;MACX,IAAI,CAACP,aAAa,CAAC,CAAC;IACtB;EACF;EAEAA,aAAaA,CAAA,EAAG;IACd,IAAI,CAACQ,IAAI,CAAC,CAAC;EACb;EAEAD,IAAIA,CAAClB,KAAK,GAAG,CAAC,CAAC,EAAE;IACf,IAAI,CAACoB,QAAQ,CAAC;MACZ,GAAGpB,KAAK;MACRG,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;EAEAgB,IAAIA,CAACnB,KAAK,GAAG,CAAC,CAAC,EAAE;IACf,IAAI,CAACoB,QAAQ,CAAC;MACZ,GAAGpB,KAAK;MACRG,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAI,CAACS,cAAc,CAAC,CAAC;EACvB;EAEAH,sBAAsBA,CAAC;IAAEY;EAAU,CAAC,EAAE;IACpC,MAAM;MACJC,eAAe;MACfC,mBAAmB;MACnBC;IACF,CAAC,GAAG,IAAI;IAER,MAAMnB,SAAS,GAAGiB,eAAe,CAACvB,GAAG,CAACsB,SAAS,CAAC;IAEhD,IAAI,CAAChB,SAAS,IAAI,CAACmB,UAAU,CAACC,aAAa,CAACpB,SAAS,CAAC,EAAE;MACtD,IAAI,CAACa,IAAI,CAAC;QACRd,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE;MACb,CAAC,CAAC;MAEF;IACF;IAEA,MAAMqB,kBAAkB,GAAGC,qBAAqB,CAACtB,SAAS,CAAC;IAE3D,MAAMD,UAAU,GAAG,CAACwB,2BAA2B,CAC7CvB,SAAS,EACTqB,kBAAkB,EAClBH,mBACF,CAAC;IAED,IAAI,CAACJ,IAAI,CAAC;MACRf,UAAU;MACVC;IACF,CAAC,CAAC;EACJ;;EAEA;EACAO,cAAcA,CAAA,EAAG;IACf,MAAM;MAAEP;IAAU,CAAC,GAAG,IAAI,CAACL,KAAK;IAEhC,MAAM;MAAE6B;IAAK,CAAC,GAAG,IAAI;IAErB,IAAI,CAACxB,SAAS,IAAI,CAACwB,IAAI,EAAE;MACvB;IACF;IAEA,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI;IAEzB,MAAMC,SAAS,GAAGD,QAAQ,CAACE,YAAY,CAAC,CAAC;MACnCC,eAAe,GAAGF,SAAS,CAACG,qBAAqB,CAAC,CAAC;IAEzD,MAAMC,QAAQ,GAAG9C,WAAW,CAACgB,SAAS,CAAC+B,EAAE,EAAEL,SAAS,CAAC;IAErD,MAAMM,UAAU,GAAGF,QAAQ,CAACD,qBAAqB,CAAC,CAAC;IAEnD,MAAMI,UAAU,GAAG,IAAI,CAACT,IAAI,CAACK,qBAAqB,CAAC,CAAC;IAEpD,MAAM;MAAEK,UAAU;MAAEC;IAAU,CAAC,GAAGC,uBAAuB,CAACZ,IAAI,CAAC;IAE/D,MAAMa,YAAY,GAAG,CAAC,CAAC;IAEvB,IAAIL,UAAU,CAACnC,IAAI,GAAImC,UAAU,CAACM,KAAK,GAAG,CAAE,GAAGV,eAAe,CAACU,KAAK,GAAG,CAAC,EAAE;MAExE;MACAD,YAAY,CAACxC,IAAI,GACd,CAAC+B,eAAe,CAAC/B,IAAI,GAClBmC,UAAU,CAACnC,IAAI,GACfoC,UAAU,CAACK,KAAK,GAChBnD,MAAM,GACN+C,UAAU,GACZ,IAAI;IACV,CAAC,MAAM;MAEL;MACAG,YAAY,CAACxC,IAAI,GACd,CAAC+B,eAAe,CAAC/B,IAAI,GAClBmC,UAAU,CAACnC,IAAI,GACfmC,UAAU,CAACM,KAAK,GAChBnD,MAAM,GACN+C,UAAU,GACZ,IAAI;IACV;IAEA,IAAIF,UAAU,CAACpC,GAAG,GAAIoC,UAAU,CAACO,MAAM,GAAG,CAAE,GAAGX,eAAe,CAACW,MAAM,GAAG,CAAC,EAAE;MAEzE;MACAF,YAAY,CAACzC,GAAG,GACb,CAACgC,eAAe,CAAChC,GAAG,GACjBoC,UAAU,CAACpC,GAAG,GACdqC,UAAU,CAACM,MAAM,GACjBpD,MAAM,GACNgD,SAAS,GACX,IAAI;IACV,CAAC,MAAM;MAEL;MACAE,YAAY,CAACzC,GAAG,GACb,CAACgC,eAAe,CAAChC,GAAG,GACjBoC,UAAU,CAACpC,GAAG,GACdT,MAAM,GACNgD,SAAS,GACX,IAAI;IACV;IAEAvD,MAAM,CAAC,IAAI,CAAC4C,IAAI,CAACgB,KAAK,EAAEH,YAAY,CAAC;EACvC;EAEAnC,OAAOA,CAAA,EAAG;IACR,MAAM;MAAEO;IAAS,CAAC,GAAG,IAAI;IAEzB,MAAM;MAAEV;IAAW,CAAC,GAAG,IAAI,CAACJ,KAAK;IAEjC,IAAII,UAAU,EAAE;MACd;IACF;IAEA,MAAM;MAAEC;IAAU,CAAC,GAAG,IAAI;IAE1B,MAAMyC,OAAO,GAAGzC,SAAS,CAACN,GAAG,CAAC,CAAC;IAE/B,IAAI,CAAC+C,OAAO,EAAE;MACZ;IACF;IAEAhC,QAAQ,CAACiC,IAAI,CAAC,iBAAiB,EAAE;MAC/BD,OAAO;MACPjB,IAAI,EAAExC,WAAW,CAACyD,OAAO,CAACV,EAAE,EAAE,IAAI,CAACY,UAAU;IAC/C,CAAC,CAAC;IAEF,IAAI,CAAC9B,IAAI,CAAC,CAAC;EACb;EAEA+B,MAAMA,CAAA,EAAG;IACP,MAAM;MACJ7C,UAAU;MACVD,SAAS;MACTF,GAAG;MACHC;IACF,CAAC,GAAG,IAAI,CAACF,KAAK;IAEd,MAAMkD,OAAO,GAAG,CACd,oBAAoB,EACpB,aAAa,CACd;IAED,IAAI9C,UAAU,EAAE;MACd8C,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC1B;IAEA,OACEhD,SAAS,GAAAiD,WAAA,WAGSF,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC,EAAAD,WAAA,YAMiB,eAAe;MAAA,WALnD,IAAI,CAAC7C,OAAO;MAAA,SAEd;QAAEN,GAAG;QAAEC;MAAK,CAAC;MAAA,SACbE,UAAU,GACd,IAAI,CAACP,UAAU,CAAC,mDAAmD,CAAC,GACpE,IAAI,CAACA,UAAU,CAAC,MAAM;IAAC,GAAAyD,IAAA,EAJrBzB,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI,IAK9B,IAAI;EAEd;AACF;AAEApC,yBAAyB,CAAC8D,OAAO,GAAG,CAClC,eAAe,EACf,iBAAiB,EACjB,UAAU,EACV,qBAAqB,EACrB,UAAU,EACV,WAAW,EACX,YAAY,CACb;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS5B,qBAAqBA,CAAC6B,IAAI,EAAE;EACnC,OAAOA,IAAI,CAACC,cAAc,CAAC/B,kBAAkB;AAC/C;AAEA,SAASE,2BAA2BA,CAAC4B,IAAI,EAAE9B,kBAAkB,EAAEH,mBAAmB,EAAE;EAClF,OAAO,CAACG,kBAAkB,IACxBA,kBAAkB,KAAKgC,4BAA4B,CAACF,IAAI,EAAEjC,mBAAmB,CAAC;AAClF;AAEA,SAASmC,4BAA4BA,CAACF,IAAI,EAAEjC,mBAAmB,EAAE;EAC/D,IAAIjC,OAAO,CAACkE,IAAI,CAACG,GAAG,CAAC,EAAE;IACrB,OAAOpC,mBAAmB,CAACqC,UAAU,CAAC,WAAW,CAAC,CAACC,KAAK;EAC1D,CAAC,MAAM,IAAItE,QAAQ,CAACiE,IAAI,CAACG,GAAG,CAAC,EAAE;IAC7B,OAAOpC,mBAAmB,CAACqC,UAAU,CAAC,YAAY,CAAC,CAACC,KAAK;EAC3D;AACF;AAEA,SAASpB,uBAAuBA,CAACZ,IAAI,EAAE;EACrC,MAAMiC,cAAc,GAAG3E,UAAU,CAAC0C,IAAI,EAAE,sBAAsB,CAAC;EAE/D,IAAI,CAACiC,cAAc,EAAE;IACnB,OAAO;MACLtB,SAAS,EAAE,CAAC;MACZD,UAAU,EAAE;IACd,CAAC;EACH;EAEA,MAAM;IAAEA,UAAU;IAAEC;EAAU,CAAC,GAAGsB,cAAc;EAEhD,OAAO;IACLtB,SAAS;IACTD;EACF,CAAC;AACH","ignoreList":[]}
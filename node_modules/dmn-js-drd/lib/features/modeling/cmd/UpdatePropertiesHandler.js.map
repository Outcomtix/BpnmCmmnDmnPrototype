{"version":3,"file":"UpdatePropertiesHandler.js","names":["reduce","keys","forEach","getBusinessObject","NAME","ID","UpdatePropertiesHandler","elementRegistry","moddle","_elementRegistry","_moddle","$inject","prototype","execute","context","element","properties","changed","Error","ids","businessObject","oldProperties","getProperties","isIdChange","unclaim","updateId","claim","label","push","setProperties","revert","propertyNames","result","key","get","value","set"],"sources":["../../../../src/features/modeling/cmd/UpdatePropertiesHandler.js"],"sourcesContent":["import {\n  reduce,\n  keys,\n  forEach\n} from 'min-dash';\n\nimport { getBusinessObject } from 'dmn-js-shared/lib/util/ModelUtil';\n\nconst NAME = 'name',\n      ID = 'id';\n\n\n/**\n * A handler that implements a DMN property update.\n *\n * This should be used to set simple properties on elements with\n * an underlying DMN business object.\n *\n * Use respective diagram-js provided handlers if you would\n * like to perform automated modeling.\n */\nexport default function UpdatePropertiesHandler(elementRegistry, moddle) {\n  this._elementRegistry = elementRegistry;\n  this._moddle = moddle;\n}\n\nUpdatePropertiesHandler.$inject = [ 'elementRegistry', 'moddle' ];\n\n\n/**\n * Updates a DMN element with a list of new properties\n *\n * @param {Object} context\n * @param {djs.model.Base} context.element the element to update\n * @param {Object} context.properties a list of properties to set on the element's\n *                                    businessObject (the DMN model element)\n *\n * @return {Array<djs.model.Base>} the updated element\n */\nUpdatePropertiesHandler.prototype.execute = function(context) {\n\n  const { element, properties } = context,\n        changed = [ element ];\n\n  if (!element) {\n    throw new Error('element required');\n  }\n\n  const elementRegistry = this._elementRegistry,\n        ids = this._moddle.ids;\n\n  const businessObject = getBusinessObject(element),\n        oldProperties = (\n          context.oldProperties ||\n        getProperties(businessObject, keys(properties))\n        );\n\n  if (isIdChange(properties, businessObject)) {\n    ids.unclaim(businessObject[ID]);\n\n    elementRegistry.updateId(element, properties[ID]);\n\n    ids.claim(properties[ID], businessObject);\n  }\n\n  if (NAME in properties && element.label) {\n    changed.push(element.label);\n  }\n\n  // update properties\n  setProperties(businessObject, properties);\n\n  // store old values\n  context.oldProperties = oldProperties;\n  context.changed = changed;\n\n  // indicate changed on objects affected by the update\n  return changed;\n};\n\n\n/**\n * Reverts the update on a DMN elements properties.\n *\n * @param  {Object} context\n *\n * @return {djs.model.Base} the updated element\n */\nUpdatePropertiesHandler.prototype.revert = function(context) {\n  const { element, properties, oldProperties } = context;\n  const businessObject = getBusinessObject(element);\n  const elementRegistry = this._elementRegistry,\n        ids = this._moddle.ids;\n\n  // update properties\n  setProperties(businessObject, oldProperties);\n\n  if (isIdChange(properties, businessObject)) {\n    ids.unclaim(properties[ID]);\n\n    elementRegistry.updateId(element, oldProperties[ID]);\n\n    ids.claim(oldProperties[ID], businessObject);\n  }\n\n  return context.changed;\n};\n\n\nfunction isIdChange(properties, businessObject) {\n  return ID in properties && properties[ID] !== businessObject[ID];\n}\n\n\nfunction getProperties(businessObject, propertyNames) {\n  return reduce(propertyNames, function(result, key) {\n    result[key] = businessObject.get(key);\n    return result;\n  }, {});\n}\n\n\nfunction setProperties(businessObject, properties) {\n  forEach(properties, function(value, key) {\n    businessObject.set(key, value);\n  });\n}\n"],"mappings":"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","ignoreList":[]}
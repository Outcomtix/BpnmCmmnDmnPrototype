{"version":3,"file":"UpdateModdlePropertiesHandler.js","names":["reduce","keys","forEach","UpdateModdlePropertiesHandler","elementRegistry","_elementRegistry","$inject","prototype","execute","context","element","moddleElement","properties","Error","changed","oldProperties","getModdleProperties","setModdleProperties","revert","propertyNames","result","key","get","value","set"],"sources":["../../../../src/features/modeling/cmd/UpdateModdlePropertiesHandler.js"],"sourcesContent":["import {\n  reduce,\n  keys,\n  forEach\n} from 'min-dash';\n\nexport default function UpdateModdlePropertiesHandler(elementRegistry) {\n  this._elementRegistry = elementRegistry;\n}\n\nUpdateModdlePropertiesHandler.$inject = [ 'elementRegistry' ];\n\nUpdateModdlePropertiesHandler.prototype.execute = function(context) {\n\n  var element = context.element,\n      moddleElement = context.moddleElement,\n      properties = context.properties;\n\n  if (!moddleElement) {\n    throw new Error('<moddleElement> required');\n  }\n\n  // TODO(nikku): we need to ensure that ID properties\n  // are properly registered / unregistered via\n  // this._moddle.ids.assigned(id)\n  var changed = context.changed || [ element ];\n  var oldProperties = context.oldProperties\n    || getModdleProperties(moddleElement, keys(properties));\n\n  setModdleProperties(moddleElement, properties);\n\n  context.oldProperties = oldProperties;\n  context.changed = changed;\n\n  return changed;\n};\n\nUpdateModdlePropertiesHandler.prototype.revert = function(context) {\n  var oldProperties = context.oldProperties,\n      moddleElement = context.moddleElement,\n      changed = context.changed;\n\n  setModdleProperties(moddleElement, oldProperties);\n\n  return changed;\n};\n\n\n// helpers /////////////////\n\nfunction getModdleProperties(moddleElement, propertyNames) {\n  return reduce(propertyNames, function(result, key) {\n    result[key] = moddleElement.get(key);\n    return result;\n  }, {});\n}\n\nfunction setModdleProperties(moddleElement, properties) {\n  forEach(properties, function(value, key) {\n    moddleElement.set(key, value);\n  });\n}"],"mappings":"AAAA,SACEA,MAAM,EACNC,IAAI,EACJC,OAAO,QACF,UAAU;AAEjB,eAAe,SAASC,6BAA6BA,CAACC,eAAe,EAAE;EACrE,IAAI,CAACC,gBAAgB,GAAGD,eAAe;AACzC;AAEAD,6BAA6B,CAACG,OAAO,GAAG,CAAE,iBAAiB,CAAE;AAE7DH,6BAA6B,CAACI,SAAS,CAACC,OAAO,GAAG,UAASC,OAAO,EAAE;EAElE,IAAIC,OAAO,GAAGD,OAAO,CAACC,OAAO;IACzBC,aAAa,GAAGF,OAAO,CAACE,aAAa;IACrCC,UAAU,GAAGH,OAAO,CAACG,UAAU;EAEnC,IAAI,CAACD,aAAa,EAAE;IAClB,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;EAC7C;;EAEA;EACA;EACA;EACA,IAAIC,OAAO,GAAGL,OAAO,CAACK,OAAO,IAAI,CAAEJ,OAAO,CAAE;EAC5C,IAAIK,aAAa,GAAGN,OAAO,CAACM,aAAa,IACpCC,mBAAmB,CAACL,aAAa,EAAEV,IAAI,CAACW,UAAU,CAAC,CAAC;EAEzDK,mBAAmB,CAACN,aAAa,EAAEC,UAAU,CAAC;EAE9CH,OAAO,CAACM,aAAa,GAAGA,aAAa;EACrCN,OAAO,CAACK,OAAO,GAAGA,OAAO;EAEzB,OAAOA,OAAO;AAChB,CAAC;AAEDX,6BAA6B,CAACI,SAAS,CAACW,MAAM,GAAG,UAAST,OAAO,EAAE;EACjE,IAAIM,aAAa,GAAGN,OAAO,CAACM,aAAa;IACrCJ,aAAa,GAAGF,OAAO,CAACE,aAAa;IACrCG,OAAO,GAAGL,OAAO,CAACK,OAAO;EAE7BG,mBAAmB,CAACN,aAAa,EAAEI,aAAa,CAAC;EAEjD,OAAOD,OAAO;AAChB,CAAC;;AAGD;;AAEA,SAASE,mBAAmBA,CAACL,aAAa,EAAEQ,aAAa,EAAE;EACzD,OAAOnB,MAAM,CAACmB,aAAa,EAAE,UAASC,MAAM,EAAEC,GAAG,EAAE;IACjDD,MAAM,CAACC,GAAG,CAAC,GAAGV,aAAa,CAACW,GAAG,CAACD,GAAG,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;AAEA,SAASH,mBAAmBA,CAACN,aAAa,EAAEC,UAAU,EAAE;EACtDV,OAAO,CAACU,UAAU,EAAE,UAASW,KAAK,EAAEF,GAAG,EAAE;IACvCV,aAAa,CAACa,GAAG,CAACH,GAAG,EAAEE,KAAK,CAAC;EAC/B,CAAC,CAAC;AACJ","ignoreList":[]}
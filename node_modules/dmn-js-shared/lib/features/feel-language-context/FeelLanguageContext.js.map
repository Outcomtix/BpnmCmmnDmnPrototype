{"version":3,"file":"FeelLanguageContext.js","names":["FeelLanguageContext","constructor","feelLanguageContext","_feelLanguageContext","getConfig","$inject"],"sources":["../../../src/features/feel-language-context/FeelLanguageContext.js"],"sourcesContent":["/**\n * @typedef {object} FeelLanguageContextConfig\n * @property {string} [parserDialect] - The parser dialect for FEEL, e.g. `camunda`\n * @property {import('@bpmn-io/feel-editor').Variable[]} [builtins] - The built-in functions for FEEL\n */\n\nexport default class FeelLanguageContext {\n\n  /**\n   * Provide parser dialect and built-in functions for FEEL editor.\n   *\n   * @param {FeelLanguageContextConfig} feelLanguageContext\n   */\n  constructor(feelLanguageContext) {\n    this._feelLanguageContext = feelLanguageContext;\n  }\n\n  getConfig()\n  {\n    return this._feelLanguageContext;\n  }\n}\n\nFeelLanguageContext.$inject = [ 'config.feelLanguageContext' ];\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,MAAMA,mBAAmB,CAAC;EAEvC;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,mBAAmB,EAAE;IAC/B,IAAI,CAACC,oBAAoB,GAAGD,mBAAmB;EACjD;EAEAE,SAASA,CAAA,EACT;IACE,OAAO,IAAI,CAACD,oBAAoB;EAClC;AACF;AAEAH,mBAAmB,CAACK,OAAO,GAAG,CAAE,4BAA4B,CAAE","ignoreList":[]}